plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-allopen'
    id 'kotlin-noarg'
}

android {
    compileSdk 33
    defaultConfig {
        applicationId "com.metropolitan.dietplan"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        namespace 'com.metropolitan.dietplan'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += ["-Xallow-jvm-ir-dependencies", "-Xskip-prerelease-check"]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "$versions.compose_compiles_version"
    }
    testOptions {
        animationsDisabled = true
        unitTests.returnDefaultValues = true
    }
    packagingOptions {
        jniLibs {
            pickFirsts += ['META-INF/*']
        }
        resources {
            pickFirsts += ['META-INF/*']
        }
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
    implementation "androidx.appcompat:appcompat:$versions.support"
    implementation "androidx.activity:activity-ktx:$versions.activity_ktx"
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "androidx.preference:preference-ktx:$versions.preference"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
    implementation "com.google.android.material:material:$versions.material"

    implementation 'androidx.navigation:navigation-compose:2.6.0-alpha08'
    implementation 'io.coil-kt:coil-compose:2.3.0'
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'




    implementation "androidx.multidex:multidex:$versions.multidex"


    implementation "androidx.compose.compiler:compiler:$versions.compose_compiles_version"
    implementation "androidx.activity:activity-compose:$versions.compose_activity"
    implementation "androidx.compose.ui:ui:$versions.compose_version"
    implementation "androidx.compose.ui:ui-tooling:$versions.compose_version"
    implementation "androidx.compose.material:material:$versions.compose_version"
    implementation "androidx.compose.material:material-icons-core:$versions.compose_version"
    implementation "androidx.compose.material:material-icons-extended:$versions.compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$versions.compose_version"


    implementation "io.insert-koin:koin-android:$versions.koin"
    implementation 'com.beust:klaxon:5.6'
    implementation 'com.google.code.gson:gson:2.8.8'


    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycleExt"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"


    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"


    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"


    testImplementation "androidx.arch.core:core-testing:$versions.arch_core"
    testImplementation "com.google.truth:truth:$versions.truth"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    testImplementation "junit:junit:$versions.junit"
    testImplementation "org.robolectric:annotations:$versions.robolectric"
    testImplementation "org.robolectric:robolectric:$versions.robolectric"


    androidTestImplementation "androidx.compose.ui:ui-test:$versions.compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$versions.compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$versions.compose_version"
    implementation("androidx.fragment:fragment-testing:$versions.fragment_testing", {
        exclude group: 'androidx.test', module: 'core'
    })
    implementation "androidx.fragment:fragment-ktx:$versions.fragment"
    androidTestImplementation "com.google.truth:truth:$versions.truth"
    androidTestImplementation 'androidx.annotation:annotation:1.5.0'
    androidTestImplementation "androidx.arch.core:core-testing:$versions.arch_core"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$versions.espresso"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$versions.espresso"
    androidTestImplementation "androidx.test:core:$versions.atsl_core"
    androidTestImplementation "androidx.test.ext:junit:$versions.atsl_junit"
    androidTestImplementation "androidx.test.ext:junit-ktx:$versions.atsl_junit"
    androidTestImplementation "androidx.test:monitor:$versions.atsl_monitor"
    androidTestImplementation "androidx.test:rules:$versions.atsl_rules"
    androidTestImplementation "androidx.test:runner:$versions.atsl_runner"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito"
    androidTestImplementation "org.mockito:mockito-core:$versions.mockito"
    androidTestImplementation "org.robolectric:annotations:$versions.robolectric"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xallow-jvm-ir-dependencies", "-Xskip-prerelease-check"]
    }
}
